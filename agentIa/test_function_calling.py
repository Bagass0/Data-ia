"""
Script de test pour le function calling
"""

from generateText import generateText, get_function_calling_prompt, process_llm_response, writeFile, launchPythonFile

def test_function_calling():
    """Test du function calling"""
    print("üß™ Test du Function Calling")
    print("=" * 50)
    
    # Test 1: Demander √† l'IA de cr√©er un fichier hello world
    print("\n1Ô∏è‚É£ Test de cr√©ation d'un fichier hello world...")
    user_message = "Peux-tu cr√©er un fichier hello.py qui contient un programme Python qui affiche 'Hello World'?"
    
    # Cr√©er le prompt pour function calling
    prompt = get_function_calling_prompt(user_message)
    print(f"üìù Prompt envoy√© : {prompt[:100]}...")
    
    try:
        # G√©n√©rer la r√©ponse
        response = generateText(prompt)
        print(f"üîÑ R√©ponse brute du LLM : {response}")
        
        # Traiter la r√©ponse
        final_response = process_llm_response(response, user_message)
        print(f"‚úÖ R√©ponse finale : {final_response}")
        
    except Exception as e:
        print(f"‚ùå Erreur : {e}")
    
    # Test 2: V√©rifier si le fichier a √©t√© cr√©√©
    print("\n2Ô∏è‚É£ V√©rification de la cr√©ation du fichier...")
    try:
        with open("hello.py", 'r') as f:
            content = f.read()
        print(f"‚úÖ Fichier cr√©√© avec succ√®s ! Contenu :\n{content}")
    except FileNotFoundError:
        print("‚ùå Fichier hello.py non trouv√©")
    except Exception as e:
        print(f"‚ùå Erreur lors de la lecture : {e}")
    
    # Test 3: Lancer le fichier Python
    print("\n3Ô∏è‚É£ Test d'ex√©cution du fichier Python...")
    try:
        result = launchPythonFile("hello.py")
        print(f"üöÄ R√©sultat de l'ex√©cution : {result}")
    except Exception as e:
        print(f"‚ùå Erreur lors de l'ex√©cution : {e}")

def test_direct_function_calls():
    """Test direct des fonctions"""
    print("\nüîß Test direct des fonctions")
    print("=" * 30)
    
    # Test writeFile
    print("üìù Test writeFile...")
    result = writeFile("test.py", 'print("Hello from test file!")')
    print(f"R√©sultat : {result}")
    
    # Test launchPythonFile
    print("üöÄ Test launchPythonFile...")
    result = launchPythonFile("test.py")
    print(f"R√©sultat : {result}")

if __name__ == "__main__":
    test_function_calling()
    test_direct_function_calls()
